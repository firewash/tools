<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/public/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/public/bootstrap/css/bootstrap-theme.min.css">
    <link rel='stylesheet' href='/public/stylesheets/style.css'/>
    <script src="/public/jquery/jquery.js"></script>
    <script src="/public/vue/vue.js"></script>
    <script src="/public/bootstrap/js/bootstrap.min.js"></script>
</head>
<body>
<div class="page-header" onclick="window.location.reload()">
    <h1><%= title %>
        <small><%= subtitle %></small>
    </h1>
</div>

<div class="page-wraper" style="margin: 10px">
    <div class="btn-group v-space">
        <button type="button" class="btn btn-default" id="btn_add_new_task" accesskey="c">添加一个任务( Alt+C)</button>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            所有任务
        </div>
        <table id="list" class="table">
            <thead>
            <tr>
                <th>所属域名</th>
                <th>URL</th>
                <th>执行日期</th>
                <th>执行时间</th>
                <th>循环</th>
                <th>是否激活</th>
                <th>操作</th>
            </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>

</div>

<!-- start: modal dialog for add/update. -->
<div class="modal fade" id="updateTaskModal" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close"
                        data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title" id="myModalLabel">
                    任务设置
                </h4>
            </div>
            <div class="modal-body">
                <% include taskupdate.ejs %>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="btn_delete_task"
                        data-dismiss="modal">删除任务
                </button>
                <button type="button" class="btn btn-default"
                        data-dismiss="modal">关闭
                </button>
                <button type="button" class="btn btn-primary" id="btn_update_task">
                    提交更改
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newTaskModel" tabindex="-1" role="dialog"
     aria-labelledby="newTaskModel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close"
                        data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title" id="myModalLabel">
                    添加一个任务
                </h4>
            </div>
            <div class="modal-body">
                <% include taskadd.ejs %>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    关闭
                </button>
                <button type="submit" id="new_task" class="btn btn-primary">提交</button>
            </div>
        </div>
    </div>
</div>
<!-- end:  model for add and update-->

</body>
<script>
    function renderList(arr) {
        var list = $("#list");
        arr.forEach(function (item) {
            var line = $("<tr>");
            var html = `
                            <td>${item.domain}</td>
                            <td>${item.url}</td>
                            <td>${item.startdate}</td>
                            <td>${item.starttime}</td>
                            <td>${item.scheduled}</td>
                            <td><span class=${item.enabled?"enabled":""}>${item.enabled}</span></td>
                            <td>
                                <button class="task_setting"  value="${item._id}">编辑</button>
                                <button class="view_capture_list" value="${item._id}">查看监控结果</button>
                                <button class="run_task" value="${item._id}">立即执行一次</button>
                             </td>
                       `;
            line.html(html).data("origindata", item);
            list.append(line);
        })
    }
    //添加任务的表单数据绑定
    !function (){
        var myModel = window.task_update_form_model = {
            id:"11",
            domain:"",
            url:"",
            startdate:"",
            starttime:"",
            scheduled:"",
            name_prefix:"",
            email_notify_enabled:false,
            email_list:"",
            enabled:true
        };

        new Vue({
            el: '#task_update_form',
            data: myModel
        });

        //仅仅绑定展开与折叠的动作
        new Vue({
            el: "#email-notify",
            data:{
                "email_notify_enabled": true
            }
        });

    }();

    //事件绑定
    function bindEvent(){
        $("#list .task_setting").click(function(e){
            var data = $(e.target).closest("tr").data("origindata");
            for(var i in data){
                task_update_form_model[i] = data[i];
            }
            task_update_form_model.id = data._id; //VueJS的_id会出错.

            $("#updateTaskModal").modal();
        });
        $("#list .view_capture_list").click(function(e){
            var url = "/diff/list/#taskid="+ e.target.value;
            window.open(url);
        });

        $("#btn_delete_task").click(function(){
            var api = "/api/task/"+$("#update_id").val();
            $.ajax({
                type:"DELETE",
                url:api,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success:function(e){
                    //alert("删除成功,"+e);
                    window.location.reload();
                },error:function(e){
                    alert("删除失败,刷新再试."+ e);
                }
            });
        });

        $("#newTaskModel").on("shown.bs.modal",function(e){
            var d = new Date(Date.now()+1000*60*5);//往后5分钟
            document.getElementById("startdate").valueAsDate=d;
            document.getElementById("starttime").defaultValue= d.toString().match(/\d\d:\d\d/);
        });

       $("#btn_add_new_task").click(function(e){
           $("#newTaskModel").modal();
       });

        $("#new_task").click(function(e){
            var api = "/api/task/add";
            $.post(api,$("#task_add_form").serialize(),function(e){
                if(e&& e.ok){
                    alert("添加成功,"+ JSON.stringify(e));
                    window.location.reload();
                } else{
                    alert("添加失败,"+ JSON.stringify(e));
                }
            });
            e.preventDefault();
            return false;
        })

        $("#list .run_task").click(function(e){
            var api = "/api/task/"+ e.target.value +"/run";
            $.post(api,{},function(json){
                alert("Post请求返回了:"+JSON.stringify(json)) ;
            });
        });
        $("#btn_update_task").click(function(e){
            var api = "/api/task/"+ $("#update_id").val();

            $.ajax({
                type:"PUT",
                url:api,
                data: $("#task_update_form").serialize(),
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success:function(e){
                    alert("请求成功.,"+ JSON.stringify(e));
                    window.location.reload();
                },error:function(e){
                    alert("请求失败,刷新再试."+ JSON.stringify(e));
                }
            });
        });
    };

    //通过SSE定时同步任务状态
    function initStateSync() {
        var es = new EventSource("/task/statesync");
        window.es = es;
        es.addEventListener("message",function(msg){
            console.log("message",msg)
        });
        es.addEventListener("open",function(msg){
            console.log("open",msg)
        });
        es.addEventListener("error",function(msg){
            console.log("error",msg)
            es.close();
        });
        es.addEventListener("close",function(msg){
            console.log("close",msg);
            //todo 此处再次重连。（为了释放服务器端内存专门要得这样搞得）
        });
    }

    //开始
    $(function () {
        var data = <%- JSON.stringify(data) %>;
        renderList(data);
        bindEvent();
        initStateSync();
    })

</script>

</html>
