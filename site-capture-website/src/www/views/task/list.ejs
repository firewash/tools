<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title><%= title %></title>
    <meta name="data-spm" content="aaa">
    <meta name="spm-id" content="spma.spmb/0.01">
    <meta name="aplus-waiting" content="1">

    <link rel="stylesheet" href="/public/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/public/bootstrap/css/bootstrap-theme.min.css">
    <link rel='stylesheet' href='/public/stylesheets/style.css'/>
    <script src="/public/jquery/jquery.js"></script>
    <script src="/public/vue/vue.js"></script>
    <script src="/public/bootstrap/js/bootstrap.min.js"></script>

    <script id="tb-beacon-aplus" src="//g.alicdn.com/alilog/mlog/aplus_v2.js"
            exparams="category=&amp;userid=&amp;aplus&amp;yunid=&amp;1uI3JJzexnmn&amp;asid=AQAAAAAwpqFXrMQMKgAAAADTgJxcKsXaBA=="></script>
    <script src="/public/aplus-abtest/index.js"></script>
</head>
<body data-spm="bbb" data-spm-click="gostr=/aliyun;locaid=d201431">
<script>
//    var bucket = new ABtester({
//        key: 'global',
//        timestamp: 1450098645294,
//        bucketName: 'ab',
//        config: {
//            version: ['A', 'B', 'C'],
//            rate: [0.3, 0.3, 0.4]
//        }
//    });
</script>
<div class="page-header" onclick="window.location.reload()">
    <h1><%= title %>
        <small><%= subtitle %></small>
    </h1>
</div>

<div class="page-wraper" style="margin: 10px">
    <div class="btn-group v-space" data-spm="con">
        <button type="button" class="btn btn-default" id="btn_add_new_task"
                accesskey="c" data-spm="111">
            添加一个任务( Alt+C)
        </button>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading" data-spm-click="btn">
            所有任务
        </div>
        <table id="list" class="table">
            <thead>
            <tr>
                <th>所属域名</th>
                <th>URL</th>
                <th>执行日期</th>
                <th>执行时间</th>
                <th>循环</th>
                <th>是否激活</th>
                <th>操作</th>
            </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>
</div>

<% include taskedit.ejs %>

</body>
<script>
    //空的任务数据
    var defaultTaskData = {
        id: "",
        domain: "",
        url:"",
        startdate:"",
        starttime:"",
        interval:0,
        name_prefix:"",
        scheduled:"",
        email_notify_enabled: false,
        agent_width: <%= agentWidth %>,
        agent_height: <%= agentHeight %>,
        useragent: '<%= useragent %>' ,
        ignore: '',
        email_list:"",
        enabled: true,
    };
    // 全局暴露的ignorearea,ejs等用
    var formdata ={
        id: "",
        domain: "",
        url:"",
        startdate:"",
        starttime:"",
        interval:0,
        name_prefix:"",
        scheduled:"",
        email_notify_enabled: false,
        agent_width: 0,
        agent_height: 0,
        useragent: '' ,
        ignore: '',
        email_list:"",
        enabled: true
    };

    function setTaskFormData(src){
        var dest = formdata;
        //考虑到新老数据的问题，得先用default的数据抹一遍。
        for(let key in defaultTaskData) {
            if(defaultTaskData.hasOwnProperty(key)){
                dest[key] = defaultTaskData[key];
            }
        }
        if(src){
            for(let key in src) {
                if(src.hasOwnProperty(key)){
                    dest[key] = src[key];
                }
            }
            if(src._id)formdata.id = src._id; //VueJS的_id会出错.
        }

    }

    function renderList(arr) {
        var list = $("#list");
        arr.forEach(function (item) {
            var line = $("<tr>");
            var html = `
                            <td>${item.domain}</td>
                            <td>${item.url}</td>
                            <td>${item.startdate}</td>
                            <td>${item.starttime}</td>
                            <td>${item.scheduled}</td>
                            <td><span class=${item.enabled?"enabled":""}>${item.enabled}</span></td>
                            <td>
                                <button class="task_setting"  value="${item._id}">编辑</button>
                                <button class="view_capture_list" value="${item._id}">查看监控结果</button>
                                <button class="run_task" value="${item._id}">立即执行一次</button>
                             </td>
                       `;
            line.html(html).data("origindata", item);
            list.append(line);
        })
    }

    //事件绑定
    function bindEvent(){
        $("#btn_add_new_task").click(function(e){
            setTaskFormData(null);
            var d = new Date(Date.now()+1000*60*5);//往后5分钟
            document.getElementById("startdate").valueAsDate=d; // todo 这里不该操作dom，记得优化
            document.getElementById("starttime").defaultValue= d.toString().match(/\d\d:\d\d/);
            $("#TaskEditorModel").modal();
        });

        $("#list .task_setting").click(function(e){
            var data = $(e.target).closest("tr").data("origindata");
            setTaskFormData(data);
            $("#TaskEditorModel").modal();
        });
        $("#list .view_capture_list").click(function(e){
            var url = "/diff/list/#taskid="+ e.target.value;
            window.open(url);
        });

        $("#list .run_task").click(function(e){
            var api = "/api/task/"+ e.target.value +"/run";
            $.post(api,{},function(json){
                alert("Post请求返回了:"+JSON.stringify(json)) ;
            });
        });
    }
    //通过SSE定时同步任务状态
    function initStateSync() {
        var es = new EventSource("/task/statesync");
        window.es = es;
        es.addEventListener("message",function(msg){
            console.log("message",msg)
        });
        es.addEventListener("open",function(msg){
            console.log("open",msg)
        });
        es.addEventListener("error",function(msg){
            console.log("error",msg)
            es.close();
        });
        es.addEventListener("close",function(msg){
            console.log("close",msg);
            //todo 此处再次重连。（为了释放服务器端内存专门要得这样搞得）
        });
    }

    //开始
    $(function () {
        var data = <%- JSON.stringify(data) %>;
        renderList(data);
        bindEvent();
        initStateSync();
    });
</script>

</html>
